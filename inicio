SE A PRIMEIRA COLUNA FOR 'ID', COLOCAR A INSTRUÇÃO [INTEGER KEY AUTOINCREMENT] PARA NUMERÁ-LA DE FORMA AUTOMÁTICA

* -> TUDO
SELECT -> SELECIONAR
CREATE TABLE -> CRIAR TABELA
DISTINCT -> RETORNA OS VALORES ÚNICOS DA COLUNA DA TABELA;
*******************************
INSERT INTO -> COLOCAR NA TABELA
VALUES -> VALORES
EX: INSERT INTO [NOME DA TABELA] VALUES [QUAIS VALORES ADICIONAR]
*******************************
ORDER BY [] -> CLASSIFICAR A TABELA POR ORDEM DA COLUNA. CRESCENTE: ASC ; DESCRESCENTE: DESC
WHERE -> ONDE
AND -> E
OR -> OU
IN -> DENTRO. TYPE IN [...,...,...]
LIKE = LIKE '%...%' -> PROCURA UM TERMO NA COLUNA
       LIKE 'P%' -> PROCURA TERMOS NA COLUNA QUE COMEÇA COM A LETRA P
AS -> RENOMEAR COLUNA
TOP -> PEGA A QUANTIDADE DESEJADA DE LINHAS . [SELECT TOP 10 *]
BETWEEN -> ENCONTRAR VALOR ENTRE UM VALOR MÍNIMO E OUTRO MÁXIMO. [WHERE VALOR BETWEEN MINIMO AND MAXIMO]
MIN -> VALOR MÍNIMO. MIN()
MAX -> VALOR MÁXIMO. MAX()
AVG -> MÉDIA. AVG()
GROUP BY -> AGRUPA AS INFORMAÇÕES DA COLUNA
HAVIN -> TOTAL (AGRUPADO). USADO SEMPRE DEPOIS DO GROUP BY. UTILIZAR OPERADORARES LÓGICOS (<,>,=) E FUNÇÕES (COUNT,MAX,MIN) QUE FORAM USADAS APÓ9S O SELECT. 

INNER JOIN -> JUNTA COLUNAS. LETRA DA TABELA (.) NOME DA COLUNA. A TABELA DO FROM TEM QUE SER DIFERENTE DA INNER JOIN. SEMPRE USAR O OPERADOR ON.
ESTRUTURA:
SELECT C.CLIENTES, C.NOME, E.RUA, E.CIDADE
FROM CLIENTE C
INNER JOIN ENDERECO E ON E.ENDERECO_ID = C.ENDERECO_ID

*** TIPOS DE JOIN'S ***

LEFT OUTER JOIN-> RETORNA UM CONJUNTO DE TODOS OS DADOS DA TABELA A E OS REGISTROS CORRESPONDENTES DA TABELA B (QUANDO HOUVER).
SELECT *
FROM TABELA A
LEFT JOIN TABELA B ON TABELA A.NOME = TABELA B.NOME

1º NOME DA COLUNA 
2º TIPO DE DADO (TEXT, INTEGER, INTEGER PRIMARY KEY)

SELECT [NOME DA COLUNA] FROM [NOME DA TABELA]

localhost\SQLEXPRESS
